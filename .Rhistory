q5data <- read.fortran("2Q5.for", list(c("X10"), c("2F2.1"), c("2F2.1"),c("2F2.1"),c("2F2.1")))
q5data
q5data <- read.fortran("2Q5.for", list(c("X10"), c("2F3.1"), c("2F3.1"),c("2F3.1"),c("2F3.1")))
q5data <- read.fortran("2Q5.for", list(c("X10"), c("2F3.1"), c("X5","2F3.1"),c("X5","2F3.1"),c("X5","2F3.1")))
q5data <- read.fortran("2Q5.for", list(c("X10"), c("F4.1", "F3.1"), c("F4.1","F3.1"),c("F4.1","F3.1"),c("F4.1","F3.1")))
q5data <- read.fortran("2Q5.for", list(c("X10"), c("F4.1", "F4.1"), c("F4.1","F4.1"),c("F4.1","F4.1"),c("F4.1","F4.1")))
q5data <- read.fortran("2Q5.for", list(c("X28"), c("F4.1"), c("X30")
))
q5data
q5data <- read.fortran("2Q5.for", list(c("X28"), c("A4"), c("X30")))
q5data
q5data <- read.fortran("2Q5.for", list(c("X28"), c("D4.1"), c("X30")))
q5data
q5data <- read.fortran("2Q5.for", list(c("X28"), c("F4.1"), c("X30")))
q5data
q5data <- read.fortran("2Q5.for", list(c("X28"), c("F4.2"), c("X30")))
q5data
q5data <- read.fortran("2Q5.for", list(c("X28"), c("F4.0"), c("X30")))
q5data
nrows(q5data)
nrow(q5data)
q5data <- read.fortran("2Q5.for", list(c("X28"), c("F4.0"), c("X30")))
source("2Q5.R")
source("2Q5.R")
source("2Q5.R")
source("2Q5.R")
source("2Q5.R")
source("2Q5.R")
source("2Q5.R")
source("2Q5.R")
source("2Q5.R")
source("2Q5.R")
source("2Q5.R")
source("2Q5.R")
source("2Q5.R")
source("2Q5.R")
source("2Q5.R")
source("2Q5.R")
source("2Q5.R")
source("2Q5.R")
source("2Q5.R")
source("2Q5.R")
source("2Q5.R")
source("2Q5.R")
source("2Q5.R")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
ls()
rm(list = ls())
swirl()
mtdf <- read.csv(path2csv, stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
install.packages("dplyr")
install.packages("dplyr")
swirl()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
print(tbl_df)
tbl_df
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran,
| r_arch:country)
select(cran, r_arch:country)
select(cran, country: r_array)
select(cran, country: r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, X: size())
select(cran, X: size(cran))
select(cran, X:size(cran))
?size
select(cran, 1:11
)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comarison
?Comparison
filter(cran, r_version == "3.1.1", country %IN% "India")
filter(cran, r_version == "3.1.1", country == "India")
filter(cran, r_version == "3.1.1", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux_gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
)
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(ip_id, package, size)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size_mb / 2^10)
mutate(cran3, size_gb = size_mb / 2^10)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size_mb / 2^10)
(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, size <- size +1000)
mutate(cran3, size = size +1000)
mutate(cran3, correct_size = size +1000)
summarize(cran, avg_bytes
| = mean(size))
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
!group_by()
!group_by
help group_by()
help group_by
?group_by
by_package <- group_by(cran, package)
by_package
summary(by_package, mean(size))
summarize(by_package, mean(size))
submit()
tbl()
tbl
pak_sum
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View
View(top_counts)
op_counts_sorted <- arrange(top_counts, count)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
View(top_counts_sorted)
uantile(pack_sum$unique, probs = 0.99)
quantile(pack_sum$unique, probs = 0.99)
top_counts <- filter(pack_sum, unique > 465)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
arange(top_unique, desc(unique))
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex. count, -grade)
gather(students, sex, count, -grade)
students2
gather(students2, sex_class, count)
gather(students2, sex_class, count, -grade)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(data = res, col = sex_class, into = c("sex", "class"))
submit()
submit()
students3
submit
submit()
?spread
submit()
extract_numeric("class5")
submit()
?mutate
submit()
submit()
submit()
students3
submit()
submit()
submit()
submit()
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade) %>%
mutate(class = extract_numeric(class))
submit()
submit()
students4
submit()
submit()
submit()
submit()
passed
failed
mutate(passed, status = "passed")
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status ="failed")
?bind_rows
bind_cols(passes, failed)
bind_cols(passed, failed)
bind_rows(passed, failed)
sat
submit()
submit()
?separate
submit()
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
help(package = dplyr)
today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label =TRUE
)
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
my_date <- ymd("1989 May 17")
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
dmy("25081985")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- now()
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
?now
myc <- now("America/New_York")
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
update(depart, hours = 17, minutes = 34)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(time, "Asia/Hong_Kong")
with_tz(arrive, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz ="Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
getwd()
source("3Q1.R")
source("3Q1.R")
?download
?download.file
?download.file
source("3Q1.R")
source("3Q1.R")
source("3Q1.R")
source("3Q1.R")
source("3Q1.R")
source("3Q1.R")
source("3Q1.R")
source("3Q1.R")
source("3Q1.R")
source("3Q1.R")
source("3Q1.R")
install.packages("jpeg")
library(jpeg)
source("3Q2.R")
source("3Q2.R")
source("3Q2.R")
source("3Q2.R")
source("3Q2.R")
source("3Q2.R")
source("3Q2.R")
source("3Q2.R")
source("3Q2.R")
source("3Q2.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
?arrange
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
dim(GDPdata)
summary(GDPdata)
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
View(educationalData)
View(arrangedData)
?summarize
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
?group_by
source("3Q3.R")
source("3Q3.R")
?mean
source("3Q3.R")
?quantile
?quantile
source("3Q3.R")
source("3Q3.R")
source("3Q3.R")
source("4Q1.R")
source("4Q1.R")
source("4Q2.R")
source("4Q2.R")
source("4Q2.R")
source("4Q2.R")
source("4Q2.R")
?as.numeric
?as.numeric
source("4Q2.R")
source("4Q2.R")
source("4Q2.R")
source("4Q2.R")
source("4Q2.R")
source("4Q2.R")
source("4Q2.R")
source("4Q2.R")
source("4Q2.R")
source("4Q2.R")
source("4Q2.R")
source("4Q2.R")
source("4Q2.R")
source("4Q2.R")
source("4Q2.R")
source("4Q2.R")
source("4Q2.R")
?grep
source("4Q2.R")
source("4Q2.R")
View(GDPdata)
source("4Q2.R")
source("4Q2.R")
source("4Q2.R")
source("4Q2.R")
source("4Q2.R")
source("4Q2.R")
source("4Q4.R")
source("4Q4.R")
source("4Q4.R")
source("4Q4.R")
source("4Q4.R")
source("4Q5.R")
install.packages(quantmod)
install.packages("quantmod")
source("4Q5.R")
source("4Q5.R")
source("4Q5.R")
source("4Q5.R")
source("4Q5.R")
source("4Q5.R")
source("4Q5.R")
source("4Q5.R")
source("4Q5.R")
source("4Q5.R")
source("4Q5.R")
source("4Q5.R")
source("4Q5.R")
source("4Q5.R")
source("4Q5.R")
source("4Q5.R")
source("4Q5.R")
source("4Q5.R")
source("4Q5.R")
setwd("/Users/iulia/git/GettingAndCleaningDataCourse")
source(run_analysis.R)
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
?merge
?rbind
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
?read.table
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
?select
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
Uses descriptive activity names to name the activities in the data setUses descriptive activity names to name the activities in the data set
Uses descriptive activity names to name the activities in the data setUses descriptive activity names to name the activities in the data set
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
